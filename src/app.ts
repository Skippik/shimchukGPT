import {Context, NarrowedContext, Telegraf} from 'telegraf';
import {message} from 'telegraf/filters';
import dotenv from 'dotenv';
import {createStartButton} from './btns/startBtn';
import {Update} from 'telegraf/typings/core/types/typegram';
const fs = require('fs');
const path = require('path');
const absoluteFilePath = path.join(__dirname, './badWords.json');

//
const data = fs.readFileSync(absoluteFilePath, 'utf8');
const badWords = Object.values(JSON.parse(data)) as string[];

//

dotenv.config();

const botToken = process.env.BOT_TOKEN as string;

const bot = new Telegraf(botToken);
//
//
const FORM_LINK =
  'https://docs.google.com/spreadsheets/d/1xdCWrb6opUb7s5_542I5kxUEmNKI7r-WdIlOonO3v5M/edit?usp=sharing';

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
bot.start(ctx => {
  // const keyboard = createStartButton().resize();

  ctx.reply('–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç. üëã');
});

bot.on('new_chat_members', async ctx => {
  // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
  await fetchAllMembers(ctx);
  ctx.message.new_chat_members.forEach(newMember => {
    const firstName = newMember.first_name || '–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫';

    const welcomeMessage = `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üëã\n\n–ú—ã —Ç—É—Ç —Å–æ–±–∏—Ä–∞–µ–º—Å—è –Ω–∞ –≤–µ—á–µ—Ä –≤—Å—Ç—Ä–µ—á–∏ –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤ 2025 –≥–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Å—Ç–æ–∏—Ç—Å—è 1 —Ñ–µ–≤—Ä–∞–ª—è. –ú—ã —Ä–∞–¥—ã —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! üòä\n\n–°–µ–π—á–∞—Å –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ø–æ–∏—Å–∫–∞—Ö –≤—Å–µ—Ö –ª—é–¥–µ–π –∏–∑ –Ω–∞—à–µ–≥–æ –≤—ã–ø—É—Å–∫–∞. –ï—Å–ª–∏ –Ω–µ —Ç—Ä—É–¥–Ω–æ, –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –≤–ø–∏—à–∏ –∏–º–µ–Ω–∞ —Ç–µ—Ö, —Å –∫–µ–º —Ç—ã —É—á–∏–ª—Å—è, –Ω–æ –∏—Ö –ø–æ–∫–∞ –Ω–µ—Ç –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ: ${FORM_LINK}\n\n–°–ø–∞—Å–∏–±–æ! üôå`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
    ctx.reply(welcomeMessage);
  });
});

//
const fetchAllMembers = async (ctx: {
  chat: {id: any};
  reply: (arg0: string) => void;
}) => {
  try {
    const chatId = ctx.chat.id; // ID –≥—Ä—É–ø–ø—ã
    const members = []; // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

    // –í–Ω–∏–º–∞–Ω–∏–µ! –≠—Ç–æ –ø—Ä–∏–º–µ—Ä –¥–ª—è –≥—Ä—É–ø–ø—ã —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ ID —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    // –í —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö Telegram API –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±–µ–∑ –¥–æ–ø. –º–µ—Ç–æ–¥–æ–≤
    const chatAdmins = await bot.telegram.getChatAdministrators(chatId);
    const adminUserIds = chatAdmins.map(admin => admin.user.id);

    // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–ø—Ä–∏–º–µ—Ä)
    for (const userId of adminUserIds) {
      const memberInfo = await bot.telegram.getChatMember(chatId, userId);
      members.push({
        id: memberInfo.user.id,
        first_name: memberInfo.user.first_name,
        last_name: memberInfo.user.last_name || null,
        username: memberInfo.user.username || null,
        status: memberInfo.status,
      });
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
    fs.writeFileSync('group_members.json', JSON.stringify(members, null, 2));
    console.log('–î–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');

    // –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
    ctx.reply(
      `–°–æ–±—Ä–∞–Ω–æ –¥–∞–Ω–Ω—ã—Ö: ${members.length} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ "group_members.json".`,
    );
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:', error);
    ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.');
  }
};

// –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç
try {
  bot.launch();
} catch (error) {
  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:', error);
}
